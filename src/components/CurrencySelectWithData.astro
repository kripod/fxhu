---
import { getCollection } from "astro:content";

import {
  baseCurrencyFromSymbol,
  POPULAR_BASE_CURRENCIES,
  QUOTE_CURRENCY,
} from "../utils/currency";
import { isDateStale } from "../utils/date";
import { CurrencySelect, type CurrencySelectProps } from "./CurrencySelect";

type Props = Omit<CurrencySelectProps, "items">;

const quoteRecords = await getCollection("quoteRecords");
const activeBaseCurrencies = quoteRecords
  .filter((quoteRecord) => {
    const lastQuote = Object.entries(quoteRecord.data).at(-1);
    if (lastQuote != null) {
      const [lastDate] = lastQuote;
      return !isDateStale(new Date(lastDate));
    }
    return false;
  })
  .map((quoteRecord) => baseCurrencyFromSymbol(quoteRecord.id));
---

<CurrencySelect
  client:load
  items={[
    QUOTE_CURRENCY,
    ...POPULAR_BASE_CURRENCIES.filter((currency) =>
      activeBaseCurrencies.includes(currency),
    ),
    ...activeBaseCurrencies.filter(
      (currency) => !POPULAR_BASE_CURRENCIES.includes(currency),
    ),
  ]}
/>
