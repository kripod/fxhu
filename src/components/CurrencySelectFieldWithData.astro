---
import { getCollection } from "astro:content";

import { isDateStale } from "../utils/date";
import {
  baseCurrencyFromSymbol,
  POPULAR_BASE_CURRENCIES,
  QUOTE_CURRENCY,
} from "../utils/symbol";
import {
  CurrencySelectField,
  type CurrencySelectFieldProps,
} from "./CurrencySelectField";

type Props = Omit<CurrencySelectFieldProps, "items">;

const tickers = await getCollection("tickers");
const activeBaseCurrencies = tickers
  .filter((ticker) => {
    const lastQuote = Object.entries(ticker.data.data).at(-1);
    if (lastQuote != null) {
      const [lastDate] = lastQuote;
      return !isDateStale(new Date(lastDate));
    }
    return false;
  })
  .map((ticker) => baseCurrencyFromSymbol(ticker.data.symbol));
---

<CurrencySelectField
  client:load
  items={[
    QUOTE_CURRENCY,
    ...POPULAR_BASE_CURRENCIES.filter((currency) =>
      activeBaseCurrencies.includes(currency),
    ),
    ...activeBaseCurrencies.filter(
      (currency) => !POPULAR_BASE_CURRENCIES.includes(currency),
    ),
  ]}
  {...Astro.props}
/>
